
name: Build and Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest, windows-latest]

    steps:
      - name: Check out git repository
        uses: actions/checkout@v4

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Install Linux dependencies (Ubuntu only)
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y fuse libfuse2
          # Ensure fuse is available for AppImage creation
          sudo modprobe fuse || true

      - name: Build application
        run: npm run build
        env:
          NODE_ENV: production

      - name: Verify build output (Unix)
        if: runner.os != 'Windows'
        run: |
          echo "Checking if dist directory exists:"
          ls -la dist/
          echo "Checking if index.html exists:"
          ls -la dist/index.html
          echo "Checking if bundle.js exists:"
          ls -la dist/bundle.js

      - name: Verify build output (Windows)
        if: runner.os == 'Windows'
        run: |
          echo "Checking if dist directory exists:"
          Get-ChildItem -Path "dist" -Force
          echo "Checking if index.html exists:"
          Get-ChildItem -Path "dist/index.html" -Force
          echo "Checking if bundle.js exists:"
          Get-ChildItem -Path "dist/bundle.js" -Force

      - name: Package the application
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: npm run dist

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.os }}-build
          path: release/
          retention-days: 30

  release:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    permissions:
      contents: write
      packages: write

    steps:
      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref_name }}
          name: Release ${{ github.ref_name }}
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Upload Release Assets
        uses: softprops/action-gh-release@v1
        with:
          files: |
            artifacts/windows-latest-build/*.exe
            artifacts/windows-latest-build/*.msi
            artifacts/macos-latest-build/*.dmg
            artifacts/ubuntu-latest-build/*.AppImage
          tag_name: ${{ github.ref_name }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
